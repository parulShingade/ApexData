[
  {
    "id": 1,
    "question": "What is Spring Boot mainly used for?",
    "options": ["game development", "web applications", "video editing", "image processing"],
    "answer": "web applications"
  },
  {
    "id": 2,
    "question": "Which annotation makes a class a REST controller?",
    "options": ["@Service", "@Repository", "@Entity", "@RestController"],
    "answer": "@RestController"
  },
  {
    "id": 3,
    "question": "What does Spring Boot simplify?",
    "options": ["compiling C++", "database hardware", "Android layout", "configuration"],
    "answer": "configuration"
  },
  {
    "id": 4,
    "question": "What file is commonly used for configuration?",
    "options": ["application.properties", "main.py", "readme.txt", "pom.xml"],
    "answer": "application.properties"
  },
  {
    "id": 5,
    "question": "What built-in server is included by default?",
    "options": ["IIS", "Tomcat", "Apache", "Nginx"],
    "answer": "Tomcat"
  },
  {
    "id": 6,
    "question": "Which annotation combines @Configuration, @EnableAutoConfiguration, and @ComponentScan?",
    "options": ["@EnableWebMvc", "@RestController", "@SpringBootApplication", "@SpringBootConfig"],
    "answer": "@SpringBootApplication"
  },
  {
    "id": 7,
    "question": "Which feature adds health checks and metrics?",
    "options": ["Spring Boot CLI", "Spring Boot DevTools", "Spring Boot Actuator", "Spring Boot Starter"],
    "answer": "Spring Boot Actuator"
  },
  {
    "id": 8,
    "question": "Which command-line tool helps bootstrap new projects?",
    "options": ["Spring Generator", "Spring Starter", "Spring Initializr", "Spring Bootstrapper"],
    "answer": "Spring Initializr"
  },
  {
    "id": 9,
    "question": "Which annotation is used to enable auto-configuration?",
    "options": ["@ComponentScan", "@Configuration", "@SpringBootApplication", "@EnableAutoConfiguration"],
    "answer": "@EnableAutoConfiguration"
  },
  {
    "id": 10,
    "question": "How do you change the default port in Spring Boot?",
    "options": ["Set server.port in properties", "Use @Port annotation", "Change in web.xml", "Modify pom.xml"],
    "answer": "Set server.port in properties"
  },
  {
    "id": 11,
    "question": "What is the purpose of Spring Boot DevTools?",
    "options": ["Add logging", "Enable live reload", "Improve database speed", "Disable security"],
    "answer": "Enable live reload"
  },
  {
    "id": 12,
    "question": "What is the default port for Spring Boot?",
    "options": ["9090", "8080", "3000", "8000"],
    "answer": "8080"
  },
  {
    "id": 13,
    "question": "What does @SpringBootTest do?",
    "options": ["Loads only controllers", "Runs without auto-configuration", "Loads full context for tests", "Starts Tomcat manually"],
    "answer": "Loads full context for tests"
  },
  {
    "id": 14,
    "question": "What is the purpose of application.yml?",
    "options": ["Text notes", "Hierarchical config", "Binary storage", "Database backup"],
    "answer": "Hierarchical config"
  },
  {
    "id": 15,
    "question": "What is Spring Boot CLI mainly used for?",
    "options": ["Run Groovy scripts", "Generate JSP pages", "Manage databases", "Create WAR files only"],
    "answer": "Run Groovy scripts"
  },
  {
    "id": 16,
    "question": "How to exclude an auto-configuration class?",
    "options": ["exclude attribute", "Remove dependencies", "Delete starter file", "Change classpath"],
    "answer": "exclude attribute"
  },
  {
    "id": 17,
    "question": "Which starter would you use to build REST APIs?",
    "options": ["spring-boot-starter-data-jpa", "spring-boot-starter-web", "spring-boot-starter-security", "spring-boot-starter-cache"],
    "answer": "spring-boot-starter-web"
  },
  {
    "id": 18,
    "question": "What does @ConfigurationProperties do?",
    "options": ["Inject value from URL", "Enable caching", "Bind external config to a bean", "Scan packages"],
    "answer": "Bind external config to a bean"
  },
  {
    "id": 19,
    "question": "What is the purpose of Spring Boot Starter Parent?",
    "options": ["Manages dependency versions", "Runs Tomcat", "Connects to MongoDB", "Adds JSP support"],
    "answer": "Manages dependency versions"
  },
  {
    "id": 20,
    "question": "Which annotation is used to scan components?",
    "options": ["@ComponentScan", "@EnableScan", "@BeanScan", "@EntityScan"],
    "answer": "@ComponentScan"
  }
]
